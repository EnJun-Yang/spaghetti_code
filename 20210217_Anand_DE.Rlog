library(Seurat)
library(ggplot2)
library(patchwork)
library(dplyr)
setwd("/media/HDD/enjun/Analysis/Anand_backup_desktop_1/20210208_analysis/")
AR.SCT <- readRDS("20210208_AR_SCT_subset1_manual.rds")
x29.adt <- as.sparse(read.csv(file="/media/HDD/enjun/Analysis/Anand_backup_desktop_1/X0029/dense_umis.tsv", sep="\t", header=TRUE, row.names=1))
colnames(x29.adt) <- paste (colnames(x29.adt), "1_1", sep="-")
x29cells <- rownames(AR.SCT@meta.data[which(AR.SCT@meta.data$orig.ident=="x29"),])
x29cells <- x29cells[x29cells %in% colnames(x29.adt)]
length(x29cells)
x29.adt <- x29.adt[,x29cells]
mat <- matrix(nrow=length(rownames(x29.adt)), ncol=length(rownames(AR.SCT@meta.data)), data=0)
rownames(mat) <- rownames(x29.adt)
colnames(mat) <- rownames(AR.SCT@meta.data)
for (i in rownames(x29.adt)){for (j in colnames(x29.adt)){mat[i,j] <- x29.adt[i,j]}}
AR.SCT[["ADT"]] <- CreateAssayObject(counts=mat)
DimPlot(AR.SCT)
dev.off()
AR.SCT <- NormalizeData(AR.SCT, assay="ADT", normalization.method="CLR")
AR.SCT <- ScaleData(AR.SCT, assay="ADT")
abseq <- rownames(x29.adt)
AR.SCT.subset1.manual <- AR.SCT
library(speckle)
AR.SCT.subset1.autoclust.propstatus1 <- propeller(clusters=AR.SCT.subset1.manual@meta.data$seurat_clusters, sample=AR.SCT.subset1.manual@meta.data$type, group=AR.SCT.subset1.manual@meta.data$status)
AR.SCT.subset1.autoclust.propstatus1
AR.SCT.manual.allmarkers <- FindAllMarkers(AR.SCT.subset1.manual, test.use="MAST", min.pct=0.25)
write.table(AR.SCT.manual.allmarkers, file="Anand_subset1_allmarkers_mast.csv", sep=",", quote=FALSE)
top10 <- AR.SCT.manual.allmarkers %>% group_by(cluster)%>% top_n(n=10, wt=avg_log2FC)
head(AR.SCT.manual.allmarkers)
top10 <- AR.SCT.manual.allmarkers %>% group_by(cluster)%>% top_n(n=10, wt=avg_logFC)
DoHeatmap(subset(AR.SCT.manual.allmarkers, n=100), features=top10, size=3)
DoHeatmap(subset(AR.SCT.manual.allmarkers, n=100), features=top10$gene, size=3)
DoHeatmap(subset(AR.SCT.manual.allmarkers, downsample=100), features=top10$gene, size=3)
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=3)
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2)
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + +theme(axis.text.x=element_text(size=6, face="bold"))
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.x=element_text(size=6, face="bold"))
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.y=element_text(size=6, face="bold"))
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.y=element_text(size=5, face="bold"))
dpi=300
png(file="AR_SCT_subset1_res_0_3_DEheatmap.png", width=dpi*8, height=dpi*4, units="px", res=dpi, type="cairo")
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.y=element_text(size=5, face="bold"))
dev.off()
DotPlot(AR.SCT.subset1.manual, features=top10$gene, dot.scale=2)
DotPlot(AR.SCT.subset1.manual, features=top10$gene, dot.scale=2) + RotatedAxis()
DotPlot(AR.SCT.subset1.manual, features=top10$gene, dot.scale=2) + RotatedAxis() + theme(axis.text.x=element_text(size=5, face="bold"))
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.y=element_text(size=5, face="bold"))
png(file="AR_SCT_subset1_res_0_3_DEheatmap.png", width=dpi*16, height=dpi*8, units="px", res=dpi, type="cairo")
DoHeatmap(subset(AR.SCT.subset1.manual, downsample=100), features=top10$gene, size=2) + theme(axis.text.y=element_text(size=5, face="bold"))
dev.off()
dev.off()
png(file="AR_SCT_subset1_res_0_3_dotplot.png", width=dpi*16, height=dpi*8, units="px", res=dpi, type="cairo")
DotPlot(AR.SCT.subset1.manual, features=top10$gene, dot.scale=2) + RotatedAxis() + theme(axis.text.x=element_text(size=5, face="bold"))
abseq <- rownames(x29.adt)
FeaturePlot(AR.SCT, features=abseq)
dev.off()
savehistory(file="20210217_DE.Rlog")
